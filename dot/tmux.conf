# misc ------------------------------------------------------------------------
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256*:Tc"
set-option -g detach-on-destroy off

set-window-option -g xterm-keys on
set-option -s escape-time 10
set-option -sg repeat-time 600
set-option -s focus-events on

set-option -q -g status-utf8 on
set-window-option -q -g utf8 on

# set vi-style commands
set-window-option -g mode-keys vi

# change prefix
set-option -g prefix M-Space
bind-key M-Space send-prefix

# toggle mouse
set-option -g mouse on

# history
set-option -g history-limit 10000
bind -n C-l send-keys C-l

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display ------------------------------------------------------------------
set-option -g base-index 1               # start windows numbering at 1
set-window-option -g pane-base-index 1   # make pane numbering consistent with windows
set-window-option -g automatic-rename on # rename window to reflect current program
set-option -g renumber-windows on        # renumber windows when a window is closed
set-option -g display-panes-time 800     # slightly longer pane indicators display time
set-option -g display-time 1000          # slightly longer status messages display time
set-option -g monitor-activity on
set-option -g visual-activity off

# -- title --------------------------------------------------------------------
set-option -g set-titles on
set-option -g set-titles-string "#h ❐ #S ● #I #W"

# -- panes --------------------------------------------------------------------
set-window-option -g pane-border-status top
set-window-option -g pane-border-style "fg=#3e4452,bg=default"
set-option -g pane-active-border-style "fg=#61afef,bg=#282c34"
set-window-option -g pane-border-format "[#P][#{?@status,#[fg=#e06c75]✘,#[fg=#98c379]✔}#[fg=default]]#{?@kube_prompt,[#{@kube_prompt}],}"
set-option -g display-panes-colour "#444444"
set-option -g display-panes-active-colour "#61afef"

# -- status misc --------------------------------------------------------------
set-option -g status-style "fg=#5c6370,bg=#080808,none"
set-option -g status-interval 5
set-option -g status-justify "left"

# -- message/modes ------------------------------------------------------------
set-option -g message-style "fg=#282c34,bg=#e5c07b,bold"
set-option -g message-command-style "fg=#e5c07b,bg=#282c34,bold"
set-option -g mode-style "fg=#282c34,bg=#e5c07b,bold"

# -- window status ------------------------------------------------------------
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format "#{b:pane_current_path}"
set-window-option -g window-active-style default
set-window-option -g window-status-activity-style "fg=default,bg=default,underscore"
set-window-option -g window-status-bell-style "fg=#ffff00,bg=default,blink,bold"
set-window-option -g window-status-last-style "fg=#61afef,bg=#080808,none"
set-window-option -g window-status-style "fg=#8a8a8a,bg=#080808,none"
set-window-option -g window-status-format "#I #W#[fg=#080808,bg=#080808,none]"
set-window-option -g window-status-current-style "fg=#080808,bg=#61afef,bold"
set-window-option -g window-status-current-format "#[fg=#080808,bg=#61afef]#[fg=#080808,bg=#61afef,bold]#[fg=#080808,bg=#61afef,bold] #I  #W #[fg=#61afef,bg=#080808,none]"

# -- status left --------------------------------------------------------------
set-option -g status-left-length 1000
set-option -g status-left-style "fg=#8a8a8a,bg=#080808,none"
set-option -g status-left "#[fg=#282c34,bg=#e5c07b,bold] ❐ #S #[fg=#e5c07b,bg=#e06c75,none]#[fg=#282c34,bg=#e06c75,none] ↑ #(${HOME}/bin/tmux-uptime) #[fg=#e06c75,bg=#080808,none] "

# -- status right -------------------------------------------------------------
set-option -g status-right-length 1000
set-option -g status-right-style "fg=#8a8a8a,bg=#080808,none"
set-option -g status-right "#[fg=#3e4452,bg=000000,none]#[fg=#8a8a8a,bg=#080808,none]#[fg=none]#[bg=none]#[none]#{?client_prefix,💻 ,}#[fg=none]#[bg=none]#[none]#{?session_many_attached,👓 ,}#[fg=none]#[bg=none]#[none]#{?pane_synchronized,🔒 ,}#(${HOME}/bin/tmux-vpn)  #(${HOME}/bin/tmux-battery-status) #[fg=#8a8a8a,bg=#080808,none]#(${HOME}/bin/tmux-kube-prompt) #[fg=#8a8a8a,bg=#080808,none] %R #[fg=#8a8a8a,bg=#080808,none] %d %b #[fg=#3e4452,bg=#080808,none]#[fg=#abb2bf,bg=#3e4452,none] #(id -un)#[default]#[fg=#98c379,bg=#3e4452,none] #[fg=#98c379,bg=#3e4452,none]#[fg=#282c34,bg=#98c379,bold] #h#[fg=#e5c07b,bg=#98c379]#[fg=#e06c75,bg=#e5c07b]"

# -- navigation ---------------------------------------------------------------
bind c new-window -c "#{pane_current_path}" # create session
bind - split-window -v -c "#{pane_current_path}" # split current window horizontally
bind _ split-window -h -c "#{pane_current_path}" # split current window vertically

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 20
bind -r J resize-pane -D 20
bind -r K resize-pane -U 20
bind -r L resize-pane -R 20

# window navigation
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# -- copy mode ----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

# enable vim like visual navigation
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# -- buffers ------------------------------------------------------------------
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# -- user customizations ------------------------------------------------------
# toggle synchronize panes on and off
bind e set-window-option synchronize-panes

# turn vpn on and off
bind-key V run "tmux split-window '${HOME}/bin/tmux-vpn toggle'"

# search tmux panes with fzf
bind-key s run "tmux split-window '${HOME}/bin/tmux-pane-search'"

# search available sessions and kill
bind-key k run "tmux split-window '${HOME}/bin/tmux-kill-sessions'"

# use fuzzpass with 1pass to search for password
bind-key \\ run "tmux split-window -l 10 'bash -ci fuzzpass'"

# bind alt left and right to switch tabs directionally
bind-key -n M-Left previous-window
bind-key -n M-Right next-window

# switch panes alt+number
bind-key -n M-1 select-pane -t 1
bind-key -n M-2 select-pane -t 2
bind-key -n M-3 select-pane -t 3
bind-key -n M-4 select-pane -t 4
bind-key -n M-5 select-pane -t 5
bind-key -n M-6 select-pane -t 6
bind-key -n M-7 select-pane -t 7
bind-key -n M-8 select-pane -t 8
bind-key -n M-9 select-pane -t 9

# pane navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="children=(); i=0; pids=( $(ps -o pid= -t '#{pane_tty}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h  if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j  if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k  if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l  if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\  if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -n 'C-\' if-shell \"$is_vim\" 'send-keys M-\\\\' 'select-pane -l'

# moving in and out of panes through vim
bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# -- plugins ------------------------------------------------------------------
set -g @tpm_plugins ' \
   tmux-plugins/tpm             \
   tmux-plugins/tmux-resurrect  \
   tmux-plugins/tmux-continuum  \
   tmux-plugins/tmux-copycat  \
   tmux-plugins/tmux-yank  \
   wfxr/tmux-fzf-url \
   laktak/extrakto  \
 '

# change default extrakt
set -g @extrakto_key 'space'
set -g @extrakto_default_opt 'word'

# autosave state of tmux and restore on next boot
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'kitty,fullscreen'
set -g @continuum-save-interval '5'
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
